{"version":3,"sources":["../src/app.js"],"names":["direction","imageSliderTop","$","imageSliderBottom","leftBtn","rightBtn","topImgCount","length","bottomImgCount","counterTop","counterBottom","getTopImgWidth","counter","outerWidth","getBottomImgWidth","slide","slideWidthTop","slideWidthBottom","css","slideToBegining","setTimeout","disableBtns","attr","addImages","prepend","append","removeAttr","on","focusedTopImgWidth","focusedBottomImgWidth","nextTopImgWidth","nextBottomImgWidth"],"mappings":";;;;;AA8GC,aA9GD,QAAA,sBACA,QAAA,uBACA,QAAA,6BAEA,IAaIA,EAbEC,EAAiBC,EAAE,cACnBC,EAAoBD,EAAE,iBACtBE,EAAUF,EAAE,YACZG,EAAWH,EAAE,aACbI,EAAcJ,EAAE,kBAAkBK,OAClCC,EAAiBN,EAAE,qBAAqBK,OAG1CE,EAAaH,EACbI,EAAgBF,EAMdG,EAAiB,SAACC,GACpB,OAAOV,EAAcU,YAAAA,OAAAA,IAAWC,cAG9BC,EAAoB,SAACF,GACvB,OAAOV,EAAiBU,eAAAA,OAAAA,IAAWC,cAGjCE,EAAQ,SAACC,EAAeC,GAC1BhB,EAAeiB,IAAI,YAA2BF,cAAAA,OAAAA,EAA9C,QACAb,EAAkBe,IAAI,YAA2BD,cAAAA,OAAAA,EAAjD,SAGEE,EAAkB,WAGpBjB,EAAE,oBAAoBgB,IAAI,aAAc,QACxChB,EAAE,oBAAoBgB,IAAI,YAA1B,mBACAE,WAAW,WACPlB,EAAE,oBAAoBgB,IAAI,aAAc,qBAI1CG,EAAc,WAChBhB,EAASiB,KAAK,WAAY,YAC1BlB,EAAQkB,KAAK,WAAY,aAkD7B,SAASC,IACY,UAAdvB,GAECC,EAAeuB,QAAQtB,EAAE,8BACzBC,EAAkBqB,QAAQtB,EAAE,kCAEV,SAAdF,IAEJC,EAAewB,OAAOvB,EAAtB,+BACAC,EAAkBsB,OAAOvB,EAAE,mCAE/BiB,IACAC,WAAW,WACPf,EAASqB,WAAW,YACpBtB,EAAQsB,WAAW,cA7D3BrB,EAASsB,GAAG,QAAQ,WAChBN,IACArB,EAAY,QAEZ,IAAI4B,EAAqBjB,EAAeF,GACpCoB,EAAwBf,EAAkBJ,GAE5B,IAAfD,GAAoBC,EAAgB,GACnCD,EAAaH,IACXI,GACqB,IAAlBA,GAAuBD,EAAa,GAC1CC,EAAgBF,IACdC,GACsB,IAAlBC,GAAsC,IAAfD,GAC5BA,EAAaH,EACbI,EAAgBF,MAEdC,IACAC,GAENK,EAAMa,EAAoBC,KAG9BzB,EAAQuB,GAAG,QAAQ,WACfN,IACArB,EAAY,OAETS,IAAeH,GAAgBI,EAAgBF,GAC9CC,EAAa,IACXC,GACGA,IAAkBF,GAAkBC,EAAaH,GACvDI,EAAgB,IACdD,GACIA,IAAeH,GAAeI,IAAkBF,GACrDC,EAAa,EACbC,EAAgB,MAEdD,IACAC,GAEN,IAAIoB,EAAkBnB,EAAeF,GACjCsB,EAAqBjB,EAAkBJ,GAC3CK,GAAOe,GAAkBC,KAG7B5B,EAAkBwB,GAAG,gBAAiBJ","file":"app.31b633e0.js","sourceRoot":"..\\public","sourcesContent":["import './scss/styles.scss'\r\nimport './scss/content.scss'\r\nimport './scss/header-footer.scss'\r\n\r\nconst imageSliderTop = $('.topSlider')\r\nconst imageSliderBottom = $('.bottomSlider')\r\nconst leftBtn = $('#leftBtn')\r\nconst rightBtn = $('#rightBtn')\r\nconst topImgCount = $('.topSlider img').length\r\nconst bottomImgCount = $('.bottomSlider img').length\r\n\r\n//counter follows what image is in focus, with him we can select that image\r\nlet counterTop = topImgCount\r\nlet counterBottom = bottomImgCount \r\n\r\n/*direction denotes what button is clicked,\r\n  with this we can check do we have to prepend or append images */ \r\nlet direction \r\n\r\nconst getTopImgWidth = (counter)=>{\r\n    return $(`#img-top-${counter}`).outerWidth() \r\n}\r\n\r\nconst getBottomImgWidth = (counter)=>{\r\n    return $(`#img-bottom-${counter}`).outerWidth() \r\n}\r\n\r\nconst slide = (slideWidthTop, slideWidthBottom)=>{\r\n    imageSliderTop.css('transform', `translateX(${slideWidthTop}px)`)\r\n    imageSliderBottom.css('transform', `translateX(${slideWidthBottom}px)`)\r\n}\r\n\r\nconst slideToBegining = ()=>{\r\n    /*when we add an image after transition end,\r\n    we want to set the position to the begining but without transition*/ \r\n    $('.imageSlider div').css('transition', 'none')     \r\n    $('.imageSlider div').css('transform', `translateX(0px)`)\r\n    setTimeout(()=>{\r\n        $('.imageSlider div').css('transition', 'transform 0.5s') \r\n    })\r\n}\r\n\r\nconst disableBtns = ()=>{\r\n    rightBtn.attr(\"disabled\", \"disabled\")\r\n    leftBtn.attr(\"disabled\", \"disabled\")\r\n}\r\n\r\nrightBtn.on('click',function(){\r\n    disableBtns()\r\n    direction = 'right'\r\n    \r\n    let focusedTopImgWidth = getTopImgWidth(counterTop)\r\n    let focusedBottomImgWidth = getBottomImgWidth(counterBottom)\r\n\r\n    if(counterTop === 1 && counterBottom > 1 ){\r\n        counterTop = topImgCount\r\n        --counterBottom\r\n    }else if(counterBottom === 1 && counterTop > 1){\r\n       counterBottom = bottomImgCount\r\n       --counterTop\r\n    }else if(counterBottom === 1 && counterTop === 1){\r\n        counterTop = topImgCount\r\n        counterBottom = bottomImgCount\r\n    }else{\r\n        --counterTop\r\n        --counterBottom\r\n    }\r\n    slide(focusedTopImgWidth, focusedBottomImgWidth)\r\n})\r\n\r\nleftBtn.on('click',function(){\r\n    disableBtns()\r\n    direction = 'left'\r\n    \r\n    if(counterTop === topImgCount  && counterBottom < bottomImgCount){\r\n        counterTop = 1\r\n        ++counterBottom\r\n    }else if(counterBottom === bottomImgCount && counterTop < topImgCount){\r\n       counterBottom = 1\r\n       ++counterTop\r\n    }else if(counterTop === topImgCount && counterBottom === bottomImgCount){\r\n        counterTop = 1\r\n        counterBottom = 1\r\n    }else{\r\n        ++counterTop\r\n        ++counterBottom \r\n    }\r\n    let nextTopImgWidth = getTopImgWidth(counterTop)\r\n    let nextBottomImgWidth = getBottomImgWidth(counterBottom)\r\n    slide(-nextTopImgWidth, -nextBottomImgWidth)\r\n})\r\n\r\nimageSliderBottom.on('transitionend', addImages)\r\n\r\nfunction addImages(){\r\n    if(direction === 'right'){\r\n        //move the focused image for each slider to the end(left side)\r\n        imageSliderTop.prepend($('.topSlider img:last-child'))\r\n        imageSliderBottom.prepend($('.bottomSlider img:last-child'))\r\n    }   \r\n    else if(direction === 'left') {\r\n        //move the last image for each slider to the begining(right side)\r\n        imageSliderTop.append($(`.topSlider img:first-child` ))\r\n        imageSliderBottom.append($('.bottomSlider img:first-child'))\r\n    }\r\n    slideToBegining() \r\n    setTimeout(()=>{\r\n        rightBtn.removeAttr(\"disabled\")\r\n        leftBtn.removeAttr(\"disabled\")\r\n    })\r\n}\r\n"]}